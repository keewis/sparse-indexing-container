name: Rust CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

concurrency:
  group: ${{ github.workflow }}.${{ github.ref }}
  cancel-in-progress: true

jobs:
  detect-ci-trigger:
    name: detect ci trigger
    runs-on: ubuntu-latest
    if: |
      github.repository == 'keewis/grid-indexing'
      && (github.event_name == 'push' || github.event_name == 'pull_request')
    outputs:
      triggered: ${{ steps.detect-trigger.outputs.trigger-found }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - uses: xarray-contrib/ci-trigger@v1
        id: detect-trigger
        with:
          keyword: "[skip-ci]"

  test:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    needs: detect-ci-trigger
    if: |
      needs.detect-ci-trigger.outputs.triggered == 'false'
      && !contains(github.event.pull_request.labels.*.name, 'skip-ci')

    strategy:
      fail-fast: false
      matrix:
        os:
          - "ubuntu-latest"
          - "windows-latest"
          - "macos-latest"
        env: ["default"]

    env:
      FORCE_COLOR: 3

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: setup environment
        uses: prefix-dev/setup-pixi@fef5c9568ca6c4ff7707bf840ab0692ba3f08293 # 0.9.0
        with:
          environments: "${{ matrix.env }}"

      - name: Create rust cache
        uses: Swatinem/rust-cache@v2
        with:
          prefix-key: "${{ matrix.env }}"

      - name: Run tests
        run: |
          pixi run -e "${{ matrix.env }}" cargo build --tests --keep-going
          pixi run -e "${{ matrix.env }}" cargo test --no-fail-fast

  lint:
    name: Lint
    runs-on: ubuntu-latest

    env:
      FORCE_COLOR: 3

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: setup environment
        uses: prefix-dev/setup-pixi@fef5c9568ca6c4ff7707bf840ab0692ba3f08293 # 0.9.0
        with:
          environments: "default"

      - name: Create rust cache
        uses: Swatinem/rust-cache@v2
        with:
          prefix-key: "linter"

      - name: Cargo clippy
        run: |
          cargo clippy --all-targets --all-features
