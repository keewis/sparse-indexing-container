name: Rust CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

concurrency:
  group: ${{ github.workflow }}.${{ github.ref }}
  cancel-in-progress: true

permissions: {}

jobs:
  detect-ci-trigger:
    name: detect ci trigger
    runs-on: ubuntu-latest

    if: |
      github.repository_owner == 'keewis'
      && (github.event_name == 'push' || github.event_name == 'pull_request')
    outputs:
      triggered: ${{ steps.detect-trigger.outputs.trigger-found }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
          persist-credentials: false

      - uses: xarray-contrib/ci-trigger@10cd2bfec3484946a4058a421ddf9cfad101e715 # v1.2.1
        id: detect-trigger
        with:
          keyword: "[skip-ci]"

  test:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    needs: detect-ci-trigger
    if: |
      needs.detect-ci-trigger.outputs.triggered == 'false'
      && !contains(github.event.pull_request.labels.*.name, 'skip-ci')

    strategy:
      fail-fast: false
      matrix:
        os:
          - "ubuntu-latest"
          - "windows-latest"
          - "macos-latest"
        env: ["default"]

    env:
      FORCE_COLOR: 3

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Create rust cache
        uses: Swatinem/rust-cache@98c8021b550208e191a6a3145459bfc9fb29c4c0 # 2.8.0
        with:
          prefix-key: "${{ matrix.env }}"

      - name: setup environment
        uses: prefix-dev/setup-pixi@fef5c9568ca6c4ff7707bf840ab0692ba3f08293 # 0.9.0
        with:
          environments: "${{ matrix.env }}"

      - name: Help finding installed libraries
        run: |
          export CONDA_PREFIX=$(pixi run 'echo $CONDA_PREFIX')

          if [[ -z "$CONDA_PREFIX" ]]; then
            echo "CONDA_PREFIX is unset!"
            exit 1
          fi

          pushd $CONDA_PREFIX
          echo "PKG_CONFIG_PATH=$(readlink -f lib/pkgconfig)" >> $GITHUB_ENV
          echo "LD_LIBRARY_PATH=$(readlink -f lib)" >> $GITHUB_ENV
          popd

      - name: Help the linker on macos
        if: runner.os == 'MacOS'
        run: |
          export CONDA_PREFIX=$(pixi run 'echo $CONDA_PREFIX')

          mkdir -p target/debug/deps
          ln -s $CONDA_PREFIX/lib/*.dylib target/debug/deps/

      - name: Run tests
        run: |
          pixi run -e "${{ matrix.env }}" cargo build --tests --keep-going
          pixi run -e "${{ matrix.env }}" cargo test --no-fail-fast

  lint:
    name: Lint
    runs-on: ubuntu-latest

    env:
      FORCE_COLOR: 3

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Create rust cache
        uses: Swatinem/rust-cache@98c8021b550208e191a6a3145459bfc9fb29c4c0 # 2.8.0
        with:
          prefix-key: "linter"

      - name: setup environment
        uses: prefix-dev/setup-pixi@fef5c9568ca6c4ff7707bf840ab0692ba3f08293 # 0.9.0
        with:
          environments: "default"

      - name: Help finding installed libraries
        run: |
          export CONDA_PREFIX=$(pixi run python -c 'import os; print(os.environ["CONDA_PREFIX"])')

          if [[ -z "$CONDA_PREFIX" ]]; then
            echo "CONDA_PREFIX is unset!"
            exit 1
          fi

          pushd $CONDA_PREFIX
          echo "PKG_CONFIG_PATH=$(readlink -f lib/pkgconfig)" >> $GITHUB_ENV
          echo "LD_LIBRARY_PATH=$(readlink -f lib)" >> $GITHUB_ENV
          popd

      - name: Help the linker on macos
        if: runner.os == 'MacOS'
        run: |
          mkdir -p target/debug/deps
          ln -s $CONDA_PREFIX/lib/*.dylib target/debug/deps/

      - name: Cargo clippy
        run: |
          cargo clippy --all-targets --all-features
